[{"D:\\gluk projects\\anyksciai-3d-display\\src\\index.js":"1","D:\\gluk projects\\anyksciai-3d-display\\src\\reportWebVitals.js":"2","D:\\gluk projects\\anyksciai-3d-display\\src\\App.js":"3","D:\\gluk projects\\anyksciai-3d-display\\src\\components\\ModelsDisplay.js":"4","D:\\gluk projects\\anyksciai-3d-display\\src\\data\\modelLinks.js":"5","D:\\gluk projects\\anyksciai-3d-display\\src\\components\\ModelsCarousel.js":"6","D:\\gluk projects\\anyksciai-3d-display\\src\\reducers\\allReducers.js":"7","D:\\gluk projects\\anyksciai-3d-display\\src\\reducers\\playBackgroundAudioReducer.js":"8","D:\\gluk projects\\anyksciai-3d-display\\src\\actions\\index.js":"9","D:\\gluk projects\\anyksciai-3d-display\\src\\reducers\\setModelOpenReducer.js":"10","D:\\gluk projects\\anyksciai-3d-display\\src\\data\\modelsDescriptions.js":"11","D:\\gluk projects\\anyksciai-3d-display\\src\\components\\getWindowDimensions.js":"12"},{"size":710,"mtime":1611758839436,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":387,"mtime":1611763095749,"results":"16","hashOfConfig":"14"},{"size":3041,"mtime":1611824040172,"results":"17","hashOfConfig":"14"},{"size":490,"mtime":1611744616928,"results":"18","hashOfConfig":"14"},{"size":6181,"mtime":1611840001194,"results":"19","hashOfConfig":"14"},{"size":164,"mtime":1611759115260,"results":"20","hashOfConfig":"14"},{"size":340,"mtime":1611758808297,"results":"21","hashOfConfig":"22"},{"size":113,"mtime":1611759121170,"results":"23","hashOfConfig":"14"},{"size":302,"mtime":1611759067633,"results":"24","hashOfConfig":"14"},{"size":672,"mtime":1611824039599,"results":"25","hashOfConfig":"14"},{"size":604,"mtime":1611832937350,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1m7ila3",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rle1vg",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"D:\\gluk projects\\anyksciai-3d-display\\src\\index.js",[],["53","54"],"D:\\gluk projects\\anyksciai-3d-display\\src\\reportWebVitals.js",[],"D:\\gluk projects\\anyksciai-3d-display\\src\\App.js",[],"D:\\gluk projects\\anyksciai-3d-display\\src\\components\\ModelsDisplay.js",[],"D:\\gluk projects\\anyksciai-3d-display\\src\\data\\modelLinks.js",[],"D:\\gluk projects\\anyksciai-3d-display\\src\\components\\ModelsCarousel.js",["55"],"import React, { useState, useEffect } from \"react\";\r\nimport modelLinks from \"../data/modelLinks\";\r\nimport getWindowDimensions from \"./getWindowDimensions\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { setModelOpen } from \"../actions\";\r\n\r\nfunction ModelsCarousel(props) {\r\n  const [activeModel, setActiveModel] = useState(1);\r\n  const [carouselTransition, setCarouselTransition] = useState(false);\r\n  const windowDimensions = getWindowDimensions();\r\n\r\n  console.log(windowDimensions);\r\n\r\n  const modelsCount = modelLinks.length;\r\n  let imageMargin = 10;\r\n  let imageSize = 215;\r\n  let imageSizeEnlarged = 460;\r\n  let carouselWidth;\r\n  let carouselCenter;\r\n\r\n  const setImageSize = () => {\r\n    if (windowDimensions.width <= 1024 && windowDimensions.width > 768) {\r\n      imageMargin = 5;\r\n      imageSize = 150;\r\n      imageSizeEnlarged = 250;\r\n    } else if (windowDimensions.width <= 768 && windowDimensions.width > 450) {\r\n      imageMargin = 5;\r\n      imageSize = 110;\r\n      imageSizeEnlarged = 160;\r\n    } else if (windowDimensions.width <= 450) {\r\n      imageMargin = 5;\r\n      imageSize = 90;\r\n      imageSizeEnlarged = 130;\r\n    }\r\n    if (windowDimensions.width > 450) {\r\n      carouselWidth = imageSize * 5 + imageMargin * 10 + imageSizeEnlarged - imageSize;\r\n      carouselCenter = -activeModel * (imageSize + imageMargin * 2) - imageSize - imageMargin * 2;\r\n    } else if (windowDimensions.width <= 450) {\r\n      carouselWidth = imageSize * 3 + imageMargin * 6 + imageSizeEnlarged - imageSize;\r\n      carouselCenter = (-activeModel - 1) * (imageSize + imageMargin * 2) - imageSize - imageMargin * 2;\r\n    }\r\n  };\r\n\r\n  setImageSize();\r\n\r\n  const modelsDisplayMiddle = modelLinks.map((model, index) => index);\r\n  const modelsDisplayStart = modelsDisplayMiddle.filter((model, index) => index > modelsCount - 5);\r\n  const modelsDisplayEnd = modelsDisplayMiddle.filter((model, index) => index < 2);\r\n  const modelsDisplayArray = [...modelsDisplayStart, ...modelsDisplayMiddle, ...modelsDisplayEnd];\r\n\r\n  useEffect(() => {\r\n    const carouselTimer = setTimeout(function () {\r\n      if (activeModel === -1) {\r\n        setCarouselTransition(true);\r\n        setActiveModel(modelsCount - 1);\r\n      } else if (activeModel === 15) {\r\n        setCarouselTransition(true);\r\n        setActiveModel(0);\r\n      }\r\n    }, 150);\r\n    return () => {\r\n      clearTimeout(carouselTimer);\r\n    };\r\n  }, [activeModel]);\r\n\r\n  const buttonCarouselClicked = (direction) => {\r\n    if (direction === 1) {\r\n      if (activeModel > -1) {\r\n        setActiveModel(activeModel - 1);\r\n        setCarouselTransition(false);\r\n      } else {\r\n        setActiveModel(modelsCount - 1);\r\n      }\r\n    }\r\n    if (direction === -1) {\r\n      if (activeModel < modelsCount) {\r\n        setActiveModel(activeModel + 1);\r\n        setCarouselTransition(false);\r\n      } else {\r\n        setActiveModel(0);\r\n      }\r\n    }\r\n  };\r\n\r\n  const modelIconClicked = (modelIndex) => {\r\n    props.setModelOpen(modelIndex);\r\n  };\r\n\r\n  return (\r\n    <div className=\"models-carousel-wrapper\" key={windowDimensions.width}>\r\n      <div className=\"description\">\r\n        <div className=\"title\">\r\n          <div className=\"logo\"></div>\r\n          <div className=\"text\">DUONOS KELIAS</div>\r\n        </div>\r\n        <p>\r\n          Sveiki atvykę į virtualią Jurgio Kazlausko (1914–1987 m.) medžio drožinių galeriją, kurioje išvysite net 15 į trimatę erdvę\r\n          perkeltų kūrinių. Kaip juos apžiūrėti? Tiesiog pasirinkite patikusį drožinį, spustelėkite ant jo ir atsivėrusiame lange apžvelkite\r\n          jį iš visų pusių.\r\n        </p>\r\n        <p>P.S. pilną kolekciją galite išvysti atvykę į Arklio muziejų Niūronyse (Anykščių r.). </p>\r\n        <p>Lauksime atvykstant!</p>\r\n      </div>\r\n      <div className=\"carousel-container\">\r\n        <div className=\"side-images-container\">\r\n          <div className=\"side-image\"></div>\r\n          <div className=\"side-image\"></div>\r\n        </div>\r\n        <div className=\"carousel-wrapper\" style={{ width: `${carouselWidth}px` }}>\r\n          <div className=\"carousel-overflow-wrapper\">\r\n            <div\r\n              className=\"models-display-container\"\r\n              style={{\r\n                left: `${carouselCenter}px`,\r\n                transition: !carouselTransition ? \"0.2s all ease\" : \"none\"\r\n              }}\r\n            >\r\n              {modelsDisplayArray.map((modelIndex, index) => (\r\n                <div\r\n                  className=\"model-image\"\r\n                  key={index}\r\n                  style={{\r\n                    backgroundImage: `url(\"images/image${modelIndex + 1}.jpg\")`,\r\n                    margin: `0px ${imageMargin}px`,\r\n                    height: index === activeModel + 3 ? `${imageSizeEnlarged}px` : `${imageSize}px`,\r\n                    width: index === activeModel + 3 ? `${imageSizeEnlarged}px` : `${imageSize}px`,\r\n                    transition: !carouselTransition ? \"0.2s all ease\" : \"none\",\r\n                    cursor: index === activeModel + 3 ? \"pointer\" : \"default\",\r\n                    pointerEvents: index === activeModel + 3 ? \"auto\" : \"none\"\r\n                  }}\r\n                  onClick={() => modelIconClicked(modelIndex)}\r\n                >\r\n                  <div\r\n                    className=\"enlarge-icon\"\r\n                    style={{\r\n                      opacity: index === activeModel + 3 ? 0.85 : 0,\r\n                      transition: !carouselTransition ? \"0.2s all ease\" : \"none\"\r\n                    }}\r\n                  ></div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"buttons-container\">\r\n            <div className=\"btn btn-previous\" onClick={() => buttonCarouselClicked(1)}></div>\r\n            <div className=\"btn btn-next\" onClick={() => buttonCarouselClicked(-1)}></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    modelOpenIndex: state.setModelOpen.modelOpenIndex\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setModelOpen\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModelsCarousel);\r\n","D:\\gluk projects\\anyksciai-3d-display\\src\\reducers\\allReducers.js",[],"D:\\gluk projects\\anyksciai-3d-display\\src\\reducers\\playBackgroundAudioReducer.js",[],"D:\\gluk projects\\anyksciai-3d-display\\src\\actions\\index.js",[],"D:\\gluk projects\\anyksciai-3d-display\\src\\reducers\\setModelOpenReducer.js",[],"D:\\gluk projects\\anyksciai-3d-display\\src\\data\\modelsDescriptions.js",[],"D:\\gluk projects\\anyksciai-3d-display\\src\\components\\getWindowDimensions.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":65,"column":6,"nodeType":"62","endLine":65,"endColumn":19,"suggestions":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'modelsCount'. Either include it or remove the dependency array.","ArrayExpression",["66"],"no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [activeModel, modelsCount]",{"range":"69","text":"70"},[2400,2413],"[activeModel, modelsCount]"]